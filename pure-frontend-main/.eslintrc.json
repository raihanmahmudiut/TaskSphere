{
  "root": true,
  "extends": [
    "next",
    "next/core-web-vitals",
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended"
  ],
  "globals": {
    "React": "readonly"
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx"],
      "rules": {
        "no-undef": "off"
      }
    },
    {
      "files": ["*.ts"],
      "rules": {
        "prettier/prettier": [
          "error",
          {
            "endOfLine": "auto",
            "trailingComma": "es5",
            "tabWidth": 4,
            "semi": true,
            "singleQuote": true,
            "arrowParens": "always"
          },
          {
            "usePrettierrc": false
          }
        ]
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    "no-async-array-methods/no-async-array-methods": "error",
    "@typescript-eslint/ban-ts-comment": [
      2,
      {
        "ts-ignore": "allow-with-description"
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": ["off"],
    "semi": ["error", "always"],
    "quotes": ["warn", "single"],
    "import/no-dynamic-require": 0,
    "global-require": 0,
    "no-underscore-dangle": 0,
    "no-await-in-loop": 0,
    "no-restricted-syntax": 0,
    "no-return-await": 0,
    "no-console": 0,
    "comma-dangle": 0,
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/semi": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/consistent-type-imports": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": ["error"],
    "unused-imports/no-unused-imports": "error",
    // add new line above comment
    "lines-around-comment": [
      "error",
      {
        "beforeLineComment": true,
        "beforeBlockComment": true,
        "allowBlockStart": true,
        "allowClassStart": true,
        "allowObjectStart": true,
        "allowArrayStart": true
      }
    ],
    // add new line above return
    "newline-before-return": "error",
    // add new line below import
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "filter": "_typename",
        "format": null
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "types": ["boolean", "number", "string", "array"],
        "format": ["camelCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      }
    ],
    "complexity": ["error", { "max": 15 }],
    "max-params": "off",
    "@typescript-eslint/max-params": ["error", { "max": 4 }],
    "max-depth": [
      "error",
      {
        "max": 3
      }
    ],
    "import/prefer-default-export": "off", // Named export is easier to refactor automatically
    "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
    "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
    "eqeqeq": ["error", "always"],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto",
        "trailingComma": "es5",
        "tabWidth": 2,
        "semi": true,
        "singleQuote": true,
        "arrowParens": "always"
      },
      {
        "usePrettierrc": false
      }
    ]
  },
  "plugins": [
    "prettier",
    "@typescript-eslint",
    "@next/eslint-plugin-next",
    "unused-imports",
    "import",
    "security-node",
    "no-async-array-methods",
    "eslint-plugin-simple-import-sort",
    "eslint-plugin-prettier"
  ],
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["./tsconfig.json"]
      }
    }
  }
}
